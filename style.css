@import url('https://fonts.googleapis.com/css2?family=Encode+Sans+SC&display=swap');

* {
    margin: 0;
    padding: 0%;
    box-sizing: border-box;
}

html {
    font-size: 62.5%;
    font-family: 'Encode Sans SC', sans-serif;
}

body {
    height: 100vh;
    background: #f3f3f3;
    display: flex;
    justify-content: center;
    align-items: center;
}

.item {
    font-size: 2rem;
}

.item-1 {
    background-color: #d3c6b8;
}

.item-2 {
    background-color: #88847f;
}

.item-3 {
    background-color: #374840;
}

.item-4 {
    background-color: #376a54;
}

.item-5 {
    background-color: #d6d4d3;
}

.item-6 {
    background-color: #516464;
}

.item-7 {
    background-color: #cfdbdb;
}

.item-8 {
    background-color: #b09c98;
}

.item-9 {
    background-color: #ddc5af;
}


/* Lecture 1: Introduction To CSS Grid
grid-template-rows, grid-template-column & grid-row-gap, grid-column-gap also grid-gap row and column Line numbers starts with 1 */

/* .container {
    width: 1200px;
    background: #efedec;
    box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;
    display: grid; */
    /* grid-template-columns: repeat(2, 1fr) 1fr; */
    /* grid-template-columns: 1fr 1fr 1fr; */
    /* grid-template-columns: repeat(3, 1fr); */
    /* 1 fr stands for 1 fractional unit  */
    /* Suppose if I want to first column 1x and second column can 2x and third can 3x ,what can I do ? */
    /* grid-template-columns: 1fr 2fr 3fr; */
    /* Ans: I can do 1fr 2fr 3fr to frid-template-columns.And one more thing is that if we want to any width of that container ,it can give the same result to which iwant in question above . */
    /* repeat method used for each column value 400px */
    /* If we want 2 column each value and other can different, then
     repeat(2, 400px) 500px.
     
     If we want 1 column each value and other can different, then
     400px repeat(1, 400px) 500px.*/
    /* grid-template-rows: repeat(3, 200px); */
    /* grid-column-gap: 30px;
    grid-row-gap: 30px; */
    /* grid-gap: 30px; */
    /* You can see that grid-gap can do same as we code 2 lines befores */
    /* But this is not responsove we can doing responsiveness in CSS Grid later.*/
/* }  */



/*!----------------------------------------------*/

/* How to Position the grid Items
1: item1 in place of item3 and vice-versa it will take more works
2: After that item1 in item9 place */


.container {
    width: 1000px;
    background: #fafafa;
    box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;
    border: 1px solid #9c9c9c;
    display: grid;
    grid-template-columns: repeat(2, 1fr) 1fr; 
    grid-template-columns: 1fr 1fr 1fr;
    grid-template-rows: repeat(3, 200px);
    grid-gap: 30px;

}


/* 1: item1 in place of item3 and vice-versa it will take more works */

/* .item-1 {
    grid-column-start: 3;
    grid-column-end: 4;
}

.item-2 {
    grid-row: 1/2;
    grid-column: 2/3;
}

.item-3 {
    grid-row-start: 1;
    grid-row-end: 2;
    grid-column-start: 1;
    grid-column-end: 2;
} */

/* 2: After that item1 in item9 place */

.item-1 {
    grid-row: 3/4;
    grid-column-start: 3;
    grid-column-end: 4;
}

.item-2 {
    grid-row: 1/2;
    grid-column: 2/3;
}

/* .item-3 {
    /* grid-row-start: 1;
    grid-row-end: 2;
    grid-column-start: 1;
    grid-column-end: 2; */

    /* grid-area: 1 / 1 / 2 /2; */
    /* Grid-area can shortened the code.Syntax following:
    
    gird-area: grid-row-start / grid-column-start / grid-row-end / grid-column-end */
    /* But best is this indiviually specifying the row and column you see in code. */
/* 
    grid-row: 1/2;
    grid-column: 1/2;
}  */ 

/* Let,s expand the grid items
There are 3ways of doing it.
1: The Normal by giving the row and column line nummbers.
item 2 within:  grid-area: 1/2/2/4;
2: By using the span keyword
3: By using the -1 value to occupy tte space till the end.
*/

.item-5 {
    /* grid-area: 2/1/3/4; */
    grid-row: 2/3;
    /* grid-column: 1/ span 3;    You can check and edit the number after span keyword  */
    grid-column: 1 / -1;

}

.item-6 {
    grid-row: 3/4;
    grid-column: 1 / -1;

    /* If you,re not giving grid row you can check that @ boxes white and item1-box on the right and than item-6 column expands.And than if you can give grid -row to these than this empty white blocks vanished. */
}